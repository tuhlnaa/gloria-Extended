# Default configuration for RSNA Trauma Detection model
# All paths will be converted to Path objects automatically

# Required parameters (must be provided via command line or config file)
output_dir: "./output"  # Path to save model and results
data_dir: "D:\\Kai\\DATA_Set_2\\X-ray\\CheXpert-v1.0-small"    # Path to the dataset directory
csv_path: null    # Path to the CSV file containing class ID to name mapping

train_csv: "train.csv"  # Path to the specific split CSV file
valid_csv: "valid.csv"
test_csv: "valid.csv"   # Using validation set as test set (test set labels hidden)

phase: "classification"


# Dataset parameters
dataset:
  dataset_name: "chexpert"        # Name of the dataset to use
  mask_dir: null                  # Optional: Path to directory containing masks
  selected_classes: null          # List of class names to use (others treated as background)
  num_workers: 0                  # Number of data loading workers
  fraction: 0.03 # 1.0  # üõ†Ô∏è                  # Train split ratio
  num_classes: 2                  # Number of target classes


# Augmentation parameters
transforms:  
  random_crop:
    crop_size: 224                 # Size of random crop for data augmentation
  # random_horizontal_flip: 0.5    # Probability of random horizontal flip
  # random_affine: null            # Parameters for random affine transformation
  # color_jitter: null             # Parameters for color jittering
  # norm: norm                     # Normalization parameters


# Model parameters
model:
  image_size: 256                 # Input image size
  batch_size: 64                  # Input batch size for training
  resume: null                    # Resume full model and optimizer state from checkpoint
  pretrained: true                # Use pretrained model
  vision:
      model_name: 'resnet_50'
      freeze_cnn: true
      pretrained: "DEFAULT"
      num_targets: 5


# Optimizer parameters
optimizer:
  name: "Adam"
  weight_decay: 1e-6 # 0.01  # üõ†Ô∏è     # Weight decay factor
  clip_grad: 0.25  # 1.0 # üõ†Ô∏è


# Regularization parameters
criterion: 
  name: "BCE"
  class_weights: null


# Learning rate schedule parameters
lr_scheduler:
  name: 'plateau'
  epochs: 30                       # Number of epochs to train
  learning_rate: 1e-4 # 1.0e-3 # üõ†Ô∏è      # Learning rate for the optimizer
  warmup_ratio: 0.1               # Ratio of warmup steps
  patience: 7                     # Early stopping patience
  monitor: 'val_loss'  # This parameter specifies which metric to watch for making scheduler decisions. 
  interval: 'epoch'    # This determines when the scheduler should be called. 
  val_check_interval: null
  frequency: 3   # This determines how often the scheduler should be called according to the interval. 


# Device & distributed training parameters
device:
  amp: "no"                       # Automatic mixed precision: "no", "fp16", "bf16"
  device: "cuda:1"                # Device to use: "cpu", "cuda:0", etc.


# Logging parameters
logging:
  logger: "clearml"           # Logger to use: "tensorboard", "neptune", "clearml"
  
  # Neptune logger parameters (only required if logger="neptune")
  neptune:
    project: null                 # Neptune project name
    api_token: null               # Neptune API token
    run_id: null                  # Neptune run ID to resume (e.g., "CLS-123")
  
  # ClearML logger parameters (only required if logger="clearml")
  clearml:
    project: null                 # ClearML project name
    task_id: false                # ClearML task ID to resume or boolean flag
    task_type: "training"         # ClearML task type
    tags: []                      # List of tags for ClearML task
  
  experiment_name: "experiment2"  # Name for the experiment


# Miscellaneous parameters
misc:
  seed: 42                        # Random seed
  validation_freq: 100            # Frequency of validation (iterations)
  log_freq: 100                   # Frequency of logging metrics (iterations)
  save_freq: 100                  # Frequency of saving checkpoints (iterations)